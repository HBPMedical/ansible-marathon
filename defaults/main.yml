---
marathon_version: "1.4.2"

# Debian: Mesosphere apt repository URL
marathon_package_version: "1.0.647"
marathon_apt_package: "marathon={{ marathon_version }}-{{ marathon_package_version }}.{{ansible_distribution|lower}}{{ansible_distribution_version.split('.')|join('')|replace('1510','1504')}}"
marathon_apt_repo: "deb http://repos.mesosphere.com/{{ansible_distribution|lower}} {{ansible_distribution_release|lower}} main"

# RedHat: Mesosphere yum repository URL
marathon_yum_package: "marathon-{{ marathon_version }}"
mesosphere_yum_repo: "http://repos.mesosphere.com/el/{{ os_version_major }}/noarch/RPMS/{{ mesosphere_releases[os_version_major] }}"

# command line flags:
# https://mesosphere.github.io/marathon/docs/command-line-flags.html
# Marathon reads files under /etc/marathon/conf and adds them to CLI
marathon_zk_auth: "{% if zk_marathon_user_secret is defined %}{{ zk_marathon_user }}:{{ zk_marathon_user_secret }}@{% endif %}"
marathon_zk_dns: "{{ ansible_fqdn }}"
marathon_zk_hosts: "{% for host in groups[zookeeper] %}{{ hostvars[host]['ansible_fqdn'] }}:{{ marathon_zk_port }}{% if not loop.last %},{% endif %}{% endfor %}"

marathon_zk_port: 2181
marathon_zk_chroot: marathon
marathon_zk_connect: "zk://{{ marathon_zk_auth}}{{ marathon_zk_hosts }}/{{ marathon_zk_chroot }}"

marathon_zk_acl_world: "world:anyone:cdrwa"
marathon_zk_acl: "{% if zk_marathon_user_secret is defined %}digest:{{ zk_marathon_user }}:{{ zk_marathon_user_secret_digest}}:cdraw{% endif  %}"
marathon_mesos: "{{ mesos_zk }}"

marathon_zk_acl_cmd: "zookeepercli -servers localhost:{{ marathon_zk_port }} -auth_usr='super' -auth_pwd='{{ zk_super_user_secret }}' -force -c setacl /{{ marathon_zk_chroot }} '{{ marathon_zk_acl_world }},{{ marathon_zk_acl }}'"

marathon_http_credentials: ""
marathon_keystore_path: ""
marathon_keystore_password: ""

# LATER: marathon_hostname: {{ inventory_hostname }}.node.{{ consul_dns_domain }}
marathon_hostname: "{{ ansible_fqdn }}"
marathon_port: 8080

marathon_log_level: warn

marathon_mesos_role: ""
marathon_artifact_store: "file:///etc/marathon/store"
marathon_checkpoint: "true"

# SSL
mesos_ssl_enabled: false
mesos_ssl_support_downgrade: false

# framework authentication
marathon_principal: marathon
marathon_secret: ""

marathon_options:
  - "--artifact_store={{ marathon_artifact_store }}"
  - "{% if marathon_checkpoint|bool %}--checkpoint{% endif %}"
  - "--event_subscriber=http_callback"
  - "--hostname={{ marathon_hostname }}"
  - "--http_port={{ marathon_port }}"
  - "--logging_level={{ marathon_log_level }}"
  - "--master={{ marathon_mesos }}"
  - "--zk={{ marathon_zk_connect }}"
  - "{% if marathon_mesos_role %}--mesos_role={{ marathon_mesos_role }}{% endif %}"
  - "{% if marathon_keystore_password %}--ssl_keystore_password={{ marathon_keystore_password }}{% endif %}"
  - "{% if marathon_keystore_path %}--ssl_keystore_path=/etc/sysconfig/marathon-keystore.jks{% endif %}"
  - "{% if (do_mesos_framework_auth|bool) %}--mesos_authentication{% endif %}"
  - "{% if (do_mesos_framework_auth|bool) %}--mesos_authentication_principal={{ marathon_principal }}{% endif %}"
  - "{% if (do_mesos_framework_auth|bool) %}--mesos_authentication_secret_file=/etc/sysconfig/marathon-mesos-authentication-secret{% endif %}"

marathon_env_java_opts: '-Xmx512m'
marathon_env_java_home: '{{ ansible_local.java.general.java_home }}'
marathon_env_vars:
  - "JAVA_HOME={{ marathon_env_java_home }}"
  - "JAVA_OPTS={{ marathon_env_java_opts }}"
